// BV SHOP 出貨助手 - 診斷版
(function() {
  'use strict';

  // 檢查是否為嘉里大榮頁面
  function isKTJPage() {
    return location.hostname.includes('bvshop-manage.bvshop.tw') &&
           location.pathname.includes('order_multi_print_ktj_logistics');
  }

  // 顯示通知
  function notify(msg) {
    alert(`[BV SHOP 出貨助手] ${msg}`);
  }

  // 診斷 PDF.js 載入
  function diagnosePdfJs() {
    console.log('=== PDF.js 診斷開始 ===');
    
    const script = document.createElement('script');
    script.src = chrome.runtime.getURL('libs/pdf.min.js');
    
    console.log('Script URL:', script.src);
    
    script.onload = () => {
      console.log('Script onload 觸發');
      
      // 列出所有可能的位置
      console.log('檢查 window.pdfjsLib:', typeof window.pdfjsLib);
      console.log('檢查 window.pdfjsDistBuildPdf:', typeof window.pdfjsDistBuildPdf);
      console.log('檢查 globalThis.pdfjsLib:', typeof globalThis.pdfjsLib);
      
      // 列出所有包含 pdf 的全域變數
      const pdfKeys = Object.keys(window).filter(k => k.toLowerCase().includes('pdf'));
      console.log('Window 上包含 "pdf" 的 keys:', pdfKeys);
      
      // 嘗試直接執行測試
      setTimeout(() => {
        console.log('=== 延遲 1 秒後再檢查 ===');
        console.log('window.pdfjsLib:', window.pdfjsLib);
        console.log('typeof pdfjsLib (不加 window):', typeof pdfjsLib);
        
        // 如果找到任何 PDF 相關物件，列出其屬性
        pdfKeys.forEach(key => {
          const obj = window[key];
          if (obj && typeof obj === 'object') {
            console.log(`${key} 的屬性:`, Object.keys(obj).slice(0, 10));
          }
        });
      }, 1000);
    };
    
    script.onerror = (e) => {
      console.error('Script 載入失敗:', e);
      console.error('請確認檔案路徑:', chrome.runtime.getURL('libs/pdf.min.js'));
    };
    
    document.head.appendChild(script);
  }

  // 手動測試載入（不同方法）
  window.testPdfLoad = async function() {
    console.log('=== 測試 fetch 方法 ===');
    try {
      const response = await fetch(chrome.runtime.getURL('libs/pdf.min.js'));
      console.log('Fetch 狀態:', response.status);
      console.log('Content-Type:', response.headers.get('content-type'));
      
      const text = await response.text();
      console.log('檔案大小:', text.length, 'bytes');
      console.log('前 200 字元:', text.substring(0, 200));
      
      // 檢查是否包含關鍵字
      console.log('包含 pdfjsLib?', text.includes('pdfjsLib'));
      console.log('包含 window.pdfjsLib?', text.includes('window.pdfjsLib'));
      console.log('包含 globalThis.pdfjsLib?', text.includes('globalThis.pdfjsLib'));
      
    } catch (err) {
      console.error('Fetch 失敗:', err);
    }
  };

  // 嘗試不同的載入方式
  window.tryAlternativeLoad = function() {
    console.log('=== 嘗試替代載入方式 ===');
    
    // 方法 1: 使用 import (如果支援)
    if (typeof import === 'function') {
      import(chrome.runtime.getURL('libs/pdf.min.js'))
        .then(module => {
          console.log('Import 成功，module:', module);
          console.log('Module keys:', Object.keys(module));
        })
        .catch(err => console.error('Import 失敗:', err));
    }
    
    // 方法 2: XMLHttpRequest + eval
    const xhr = new XMLHttpRequest();
    xhr.open('GET', chrome.runtime.getURL('libs/pdf.min.js'), true);
    xhr.onload = function() {
      if (xhr.status === 200) {
        console.log('XHR 載入成功，執行 eval...');
        try {
          // 先設定全域 this
          (function() {
            eval(xhr.responseText);
          }).call(window);
          
          setTimeout(() => {
            console.log('Eval 後 window.pdfjsLib:', window.pdfjsLib);
          }, 100);
        } catch (e) {
          console.error('Eval 錯誤:', e);
        }
      }
    };
    xhr.send();
  };

  // 簡化的主程式
  if (isKTJPage()) {
    console.log('%c=== BV SHOP 出貨助手診斷模式 ===', 'color: red; font-weight: bold; font-size: 16px;');
    console.log('偵測到嘉里大榮頁面');
    console.log('');
    console.log('%c請在 Console 執行以下指令進行診斷：', 'color: blue; font-weight: bold;');
    console.log('%c1. testPdfLoad()     - 測試檔案是否存在', 'color: green');
    console.log('%c2. tryAlternativeLoad() - 嘗試其他載入方式', 'color: green');
    console.log('');
    
    // 自動開始診斷
    setTimeout(() => {
      console.log('開始自動診斷...');
      diagnosePdfJs();
    }, 1000);
  }

  // 全域診斷函數
  window.bvDiagnose = diagnosePdfJs;

})();
